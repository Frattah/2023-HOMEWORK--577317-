package it.uniroma3.diadia.ambienti;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.*;

import it.uniroma3.diadia.attrezzi.*;

class StanzaTest {
	
	// Factory Methods
	private Attrezzo attrezzoDiTest(int i) {
		Attrezzo risultato = new Attrezzo("attrezzoDiTest" + i, 1);
		return risultato;
	}
	
	private Stanza stanzaMaxAdiacenti() {
		Stanza risultato = new Stanza("stanzaMaxAdiacenti");
		for (int i = 0; i < risultato.maxNumeroDirezioni(); i++)
			risultato.impostaStanzaAdiacente("direzioneDiTest"+i,null);
		return risultato;
	}
	
	private Stanza stanzaNoAdiacentiNoAttrezzi() {
		Stanza risultato = new Stanza("stanzaNoAdiacentiNoAttrezzi");
		return risultato;
	}
	
	private Stanza stanzaMaxAttrezzi() {
		Stanza risultato = new Stanza("stanzaMaxAttrezzi");
		for (int i = 0; i < risultato.maxNumeroAttrezzi(); i++)
			risultato.addAttrezzo(attrezzoDiTest(i));
		return risultato;
	}
	
	private Stanza stanzaSingletonAttrezzi() {
		Stanza risultato = new Stanza("stanzaSingletonAttrezzi");
		risultato.addAttrezzo(attrezzoDiTest(0));
		return risultato;
	}
	
	// impostaStanzaAdiacente ##############################################################################################
	@Test
	public void testImpostaStanzaAdiacenteConStanzaMaxAdiacenti() {
		assertFalse(stanzaMaxAdiacenti().impostaStanzaAdiacente("StanzaDiTroppo", null));
	}
	
	
	// getStanzaAdiacente ##################################################################################################
	@Test
	public void testGetStanzaAdiacenteConStanzaNoAdiacenti() {
		assertNull(stanzaNoAdiacentiNoAttrezzi().getStanzaAdiacente("direzioneDiTest3"));
	}
	
	
	// getAttrezzo
	@Test
	public void testGetAttrezzoConStanzaNoAttrezzi() {
		assertNull(stanzaNoAdiacentiNoAttrezzi().getAttrezzo("attrezzoDiTest1"));
	}
	
	@Test
	public void testGetAttrezzoConStanzaMaxAttrezzi() {
		assertNotNull(stanzaMaxAttrezzi().getAttrezzo("attrezzoDiTest3"));
	}
	
	@Test
	public void testGetAttrezzoConStanzaMaxAttrezziAttrezzoAssente() {
		assertNull(stanzaMaxAttrezzi().getAttrezzo("attrezzoAssente"));
	}
	
	@Test
	public void testGetAttrezzoConStanzaSingletoAttrezzi() {
		assertNotNull(stanzaSingletonAttrezzi().getAttrezzo("attrezzoDiTest0"));
	}
	
	
	// addAttrezzo #########################################################################################################
	@Test
	public void testAddAttrezzoConStanzaNoAdiacentiNoAttrezzi() {
		assertTrue(stanzaNoAdiacentiNoAttrezzi().addAttrezzo(attrezzoDiTest(0)));
	}
	
	@Test
	public void testAddAttrezzoConMaxAttrezzi() {
		assertFalse(stanzaMaxAttrezzi().addAttrezzo(attrezzoDiTest(10)));
	}
	
	
	// removeAttrezzo ######################################################################################################
	@Test
	public void testRemoveAttrezzoConStanzaNoAdiacentiNoAttrezzi() {
		assertFalse(stanzaNoAdiacentiNoAttrezzi().removeAttrezzo(attrezzoDiTest(2)));
	}
	
	@Test
	public void testRemoveAttrezzoConStanzaMaxAttrezzi() {
		assertTrue(stanzaMaxAttrezzi().removeAttrezzo(attrezzoDiTest(1)));
	}
	
	@Test
	public void testRemoveAttrezzoConSigletonAttrezzi() {
		assertTrue(stanzaSingletonAttrezzi().removeAttrezzo(attrezzoDiTest(0)));
	}
	
	
	// getDirezioni ########################################################################################################
	@Test
	public void testGetDirezioniConStanzaNoAdiacentiNoAttrezzi() {
		assertNull(stanzaNoAdiacentiNoAttrezzi().getDirezioni());
	}
	
	@Test
	public void testGetDirezioniConStanzaMaxAdiacenti() {
		assertNotNull(stanzaMaxAdiacenti().getDirezioni());
	}
	
	@Test
	public void testGetDirezioniIfRestituisceArrayCorretto() {
		assertEquals("L'array di direzioni è sbagliato", stanzaMaxAdiacenti().getDirezioni()[2], "direzioneDiTest2");
	}
	
	
	// getNome #############################################################################################################
	@Test
	public void testgetNomeConStanzaMaxAdiacenti() {
		assertEquals("Il nome della stanza non corrisponde", stanzaMaxAdiacenti().getNome(), "stanzaMaxAdcenti");
	}
	
	
	// getAttrezzi #########################################################################################################
	@Test
	public void testGetAttrezziIfRestituisceArrayCorretto() {
		assertEquals("L'array di attrezzi è sbagliato", stanzaMaxAttrezzi().getAttrezzi()[4].getNome(), "attrezzoDiTest4");
	}
}
